<?xml version="1.0"?>
<ruleset
    name="ruleset"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">

    <description>Yelp ruleset</description>

    <!-- Exclude parcelgen autogenerated files. -->
    <exclude-pattern>.*/serializable/_.*</exclude-pattern>
    <exclude-pattern>.*/model/app/_.*</exclude-pattern>
    <exclude-pattern>.*/model/network/_.*</exclude-pattern>
    <exclude-pattern>.*/model/network/.*/_.*</exclude-pattern>

    <rule ref="rulesets/java/unusedcode.xml">
        <!-- TODO Would like to enable this check but would require a lot of work at the moment.-->
        <exclude name="UnusedModifier" />
        <!-- This would be great but it seems to have a lot of false positives? -->
        <exclude name="UnusedPrivateMethod" />
    </rule>

    <rule ref="rulesets/java/imports.xml">
        <exclude name="TooManyStaticImports" />
    </rule>

    <rule ref="rulesets/java/design.xml/BadComparison" />
    <rule ref="rulesets/java/design.xml/EqualsNull" />
    <rule ref="rulesets/java/design.xml/SimplifyBooleanExpressions" />
    <rule ref="rulesets/java/design.xml/SimplifyConditional" />
    <rule ref="rulesets/java/design.xml/UseLocaleWithCaseConversions" />
    <rule ref="rulesets/java/design.xml/PositionLiteralsFirstInComparisons" />

    <rule ref="rulesets/java/controversial.xml/UnnecessaryParentheses" />

    <rule ref="rulesets/java/optimizations.xml/AddEmptyString" />

    <rule ref="rulesets/java/empty.xml/EmptyInitializer" />
    <rule ref="rulesets/java/empty.xml/EmptySwitchStatements" />

    <rule ref="rulesets/java/basic.xml/JumbledIncrementer" />
    <rule ref="rulesets/java/basic.xml/ReturnFromFinallyBlock" />
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement" />
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation" />
    <rule ref="rulesets/java/basic.xml/MisplacedNullCheck" />
    <rule ref="rulesets/java/basic.xml/BrokenNullCheck" />

    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryReturn" />
    <rule ref="rulesets/java/unnecessary.xml/UnnecessaryConversionTemporary" />

    <rule ref="rulesets/java/strings.xml/StringInstantiation" />
    <rule ref="rulesets/java/strings.xml/StringToString" />
    <rule ref="rulesets/java/strings.xml/InefficientStringBuffering" />
    <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange" />
    <rule ref="rulesets/java/strings.xml/UseStringBufferLength" />
    <rule ref="rulesets/java/strings.xml/InefficientEmptyStringCheck" />
    <rule ref="rulesets/java/strings.xml/InsufficientStringBufferDeclaration" />
    <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar" />
    <rule ref="rulesets/java/strings.xml/UseEqualsToCompareStrings" />

    <rule name="UseIntentUtil"
        language="java"
        message="Activity onSaveInstanceState methods must call IntentUtil.checkBundleSize at the end of the method."
        class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>Activity onSaveInstanceState methods must call IntentUtil.checkBundleSize at the end of the method.</description>
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
                    //ClassOrInterfaceDeclaration[./ExtendsList/ClassOrInterfaceType[contains(@Image,'Activity')]]
                    //MethodDeclaration[MethodDeclarator[@Image='onSaveInstanceState']]
                    /Block/BlockStatement[last()][not(Statement/StatementExpression/PrimaryExpression/PrimaryPrefix/Name[@Image='IntentUtil.checkBundleSize'])]
                    ]]>
                </value>
            </property>
        </properties>
    </rule>

    <rule name="NoAndroidDependenciesInModelObjects"
        language="java"
        message="Model objects should not have Android dependencies like context or hooks into the App like AppData or AppplicationSettings. Currently flagged imports packages are com.yelp.android.appdata and android.app/content/graphics/view/widget."
        class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>Model objects should not have Android dependencies like context or hooks into the App like AppData or AppplicationSettings. Currently flagged imports packages are com.yelp.android.appdata and android.app/content/graphics/view/widget.</description>
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
                    //PackageDeclaration/Name[@Image='com.yelp.android.model.app']
                    [following::ImportDeclaration[(
                    starts-with(Name/@Image, 'com.yelp.android.appdata.') or
                    starts-with(Name/@Image, 'android.app') or
                    starts-with(Name/@Image, 'android.content') or
                    starts-with(Name/@Image, 'android.graphics') or
                    starts-with(Name/@Image, 'android.view') or
                    starts-with(Name/@Image, 'android.widget')
                    )]]
                    ]]>
                </value>
            </property>
        </properties>
    </rule>

    <rule name="SingletonsFromAppDataShouldBeInjected"
        language="java"
        message="Singleton instances from AppData.instance should be injected in the presenter's constructor, and AppData.instance should not be used to get context."
        class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>Singleton instances from AppData.instance should be injected in the presenter's constructor, and AppData.instance should not be used to get context. </description>
        <priority>2</priority>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
                    //ClassOrInterfaceDeclaration[./ExtendsList/ClassOrInterfaceType[contains(@Image,'Presenter')]]
                    //PrimaryExpression/PrimaryPrefix/Name[@Image='AppData.instance']
                    ]]>
                </value>
            </property>
        </properties>
        <example>
            <![CDATA[
            //Bad: Gets singleton instance from AppData rather than depency injecting it.
            public class PresenterImpl implements Presenter {
                private LoginManager mLoginManager;

                public PresenterImpl() {
                    mLoginManager = AppData.instance().getLoginManager();
                }
            }

            //Ok: Depency injected static instances.
            public class PresenterImpl implements Presenter {
                private LoginManager mLoginManager;

                public PresenterImpl(LoginManager loginManager) {
                    mLoginManager = loginManager;
                }
            }

            //Bad: Uses AppData as Context.
            public BookMarksListPresenter implements BookmarksListContract.Presenter {
                @Override
                public void onNext(BookmarkEvent bookmarkEvent) {
                    new ObjectDirtyEvent<>(
                            mViewModel.getCollectionsList().get(0),
                            ObjectDirtyEvent.BROADCAST_NEW_COLLECTION)
                        .broadcast(AppData.instance());
                }
            }

            //Ok: Delegate context required actions to your View implemenations.
            public BookMarksListPresenter implements BookmarksListContract.Presenter {
                @Override
                public void onNext(BookmarkEvent bookmarkEvent) {
                    mView.broadcastNewCollectionEvent(mViewModel.getCollectionsList().get(0));
                }
            }
            ]]>
        </example>
    </rule>

    <rule name="NoAndroidDependenciesInPresenterImplementations"
        language="java"
        message="Presenter implementations should not have Android dependencies like context or hooks into the App like AppData or AppplicationSettings. If you need them in your presenter you should have a View method that can excute the task. Currently flagged imports packages are android.app/content/graphics/view/widget."
        class="net.sourceforge.pmd.lang.rule.XPathRule">
        <description>Presenter implementations should not have Android dependencies like context or hooks into the App like AppData or AppplicationSettings. If you need them in your presenter you should have a View method that can excute the task. Currently flagged imports packages are android.app/content/graphics/view/widget.</description>
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
                    <![CDATA[
                    //ClassOrInterfaceDeclaration[@Interface='false' and ExtendsList/ClassOrInterfaceType[contains(@Image,'Presenter')]]
                    [preceding::ImportDeclaration[(
                    starts-with(Name/@Image, 'android.app') or
                    starts-with(Name/@Image, 'android.content') or
                    starts-with(Name/@Image, 'android.graphics') or
                    starts-with(Name/@Image, 'android.view') or
                    starts-with(Name/@Image, 'android.widget')
                    )]]
                    ]]>
                </value>
            </property>
        </properties>
    </rule>
</ruleset>
